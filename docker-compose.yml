version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/mmorpg_bot
      - REDIS_URL=redis://redis:6379/0
      - BOT_TOKEN=${BOT_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - TELEGRAM_PAYMENT_PROVIDER_TOKEN=${TELEGRAM_PAYMENT_PROVIDER_TOKEN}
      - CDN_BASE_URL=${CDN_BASE_URL:-https://cdn.example.com}
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
      - ./generated_sprites:/app/generated_sprites
      - ./generated_cards:/app/generated_cards
      - ./assets:/app/assets
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mmorpg_bot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
